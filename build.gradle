buildscript {
	ext {
		restdocsApiSecVersion = '0.17.1'
	}
}

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.11'
	id 'io.spring.dependency-management' version '1.1.3'

	//api documentation
	id 'com.epages.restdocs-api-spec' version "${restdocsApiSecVersion}"
	id 'org.hidetake.swagger.generator' version '2.18.2'
}

group = 'com.safer'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-aop'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.hibernate.validator:hibernate-validator:8.0.0.Final'

	//postGIS
	implementation 'org.hibernate:hibernate-spatial:6.1.7.Final'
	implementation 'org.postgresql:postgresql'

	//batch
	implementation 'com.opencsv:opencsv:5.7.1'
	implementation 'org.springframework.boot:spring-boot-starter-batch'
	testImplementation 'org.springframework.batch:spring-batch-test'
	implementation 'com.google.guava:guava:32.0.0-android'

	//restdocs
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
	testImplementation "com.epages:restdocs-api-spec-mockmvc:${restdocsApiSecVersion}"
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.4'

	//jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	//querydsl
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "com.querydsl:querydsl-spatial"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	//report
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'com.slack.api:slack-api-client:1.30.0'

	//s3
	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

	compileOnly 'org.projectlombok:lombok'
	testRuntimeOnly 'com.h2database:h2'
	annotationProcessor 'org.projectlombok:lombok'
	annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

bootJar {
	duplicatesStrategy = DuplicatesStrategy.EXCLUDE
	dependsOn(':openapi3')
	from("src/main/resources/static/docs") {
		into 'BOOT-INF/classes/static/docs'
	}
}

openapi3 {
	def serverUrl = project.property("SERVER_URL")
	server = "$serverUrl"
	title = "Mobby API 문서"
	description = "Spring REST Docs with Swagger UI"
	version = "0.0.1"
	outputFileNamePrefix = 'open-api-3.0.1'
	format = 'json'
	outputDirectory = 'src/main/resources/static/docs'
}